<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        .header{
            display: flex;
            justify-content: space-between;
        }

       
        *, *:before, *:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

body {
  font-family: 'Nunito', sans-serif;
  color: #384047;
}

form {
  max-width: 300px;
  margin: 10px auto;
  padding: 10px 20px;
  background: #f4f7f8;
  border-radius: 8px;
}

h1 {
  margin: 0 0 30px 0;
  text-align: center;
}

input[type="text"],
input[type="password"],
input[type="date"],
input[type="datetime"],
input[type="email"],
input[type="number"],
input[type="search"],
input[type="tel"],
input[type="time"],
input[type="url"],
textarea,
select {
  background: rgba(255,255,255,0.1);
  border: none;
  font-size: 16px;
  height: auto;
  margin: 0;
  outline: 0;
  padding: 15px;
  width: 100%;
  background-color: #e8eeef;
  color: #8a97a0;
  box-shadow: 0 1px 0 rgba(0,0,0,0.03) inset;
  margin-bottom: 30px;
}

input[type="radio"],
input[type="checkbox"] {
  margin: 0 4px 8px 0;
}

select {
  padding: 6px;
  height: 32px;
  border-radius: 2px;
}

#updateUserBtn {
  padding: 19px 39px 18px 39px;
  color: #FFF;
  background-color: #4bc970;
  font-size: 18px;
  text-align: center;
  font-style: normal;
  border-radius: 5px;
  width: 100%;
  border: 1px solid #3ac162;
  border-width: 1px 1px 3px;
  box-shadow: 0 -1px 0 rgba(255,255,255,0.1) inset;
  margin-bottom: 10px;
}

fieldset {
  margin-bottom: 30px;
  border: none;
}

legend {
  font-size: 1.4em;
  margin-bottom: 10px;
}

label {
  display: block;
  margin-bottom: 8px;
}

label.light {
  font-weight: 300;
  display: inline;
}

.number {
  background-color: #5fcf80;
  color: #fff;
  height: 30px;
  width: 30px;
  display: inline-block;
  font-size: 0.8em;
  margin-right: 4px;
  line-height: 30px;
  text-align: center;
  text-shadow: 0 1px 0 rgba(255,255,255,0.2);
  border-radius: 100%;
}

#deleteBtn{
    cursor: pointer;
}

@media screen and (min-width: 480px) {

  form {
    max-width: 480px;
  }

}

    </style>
    <link rel="stylesheet" href="https://unpkg.com/@webpixels/css@1.1.5/dist/index.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.4.0/font/bootstrap-icons.min.css">
</head>
<body>
    
    <main class="py-6 bg-surface-secondary">
        <div class="container-fluid">

    <div class="card shadow border-0 mb-7">
        <div class="card-header">
          <div class="search">
            <label>
              <input type="text" placeholder="Search here" class="search" id="search" onkeyup="searching()"/>
             
              <ion-icon name="search-outline"></ion-icon>
            </label>
          </div>

          <div class="user"></div>

            <div class="header">
                <h5 class="mb-0">Users</h5>
                <input type="search" name="search" id="search" style="width: 200px; border-radius: 15px; height: 40px;" onkeyup="searchUser()">
                <button id="add_user_btn" onclick="return addUserBtn()">Add User</button>
            </div>
            
            
        </div>
        <div class="table-responsive">

           
            <table class="table table-hover table-nowrap">
                <thead class="thead-light">
                  <input type="text" class="number" id="number" value="1" hidden>
                    <tr>
                        <th scope="col" id="name" onclick="sorting(this.id)">User Name</th>
                        <th scope="col" id="email" onclick="sorting(this.id)">Email</th>
                        <th scope="col">Role</th>
                        <th scope="col">Delete</th>
                        <th scope="col">Edit</th>
                        
                    </tr>
                </thead>
        <tbody id="change">
            <% for(var i=0;i<users.length;i++) {%>

                    <tr>
                        <td>
                            <a class="text-heading font-semibold" href="#">
                                <%= users[i].name %>
                            </a>
                        </td>
                        <td>
                        <%= users[i].email %>
                          
                        </td>
                        <td>
                            <a class="text-heading font-semibold" href="#">
                                <%= users[i].role.name %>

                            </a>
                        </td>
                        
                    <!-- <td> <span onclick="confirmation(`<%= users[i].id %>`)"> Delete</span></td> -->
                    <td><button onclick="confirmation(`<%= users[i].id %>`)" id="deleteBtn">Delete</button></td>

                    <td><button id="updateBtn" onclick="updateUser(`<%= users[i].id %>`)">Edit</button></td>
                        
                    </tr>
                    <% } %>
        
            </tbody>
            </table>
        </div>
        <!-- <div class="card-footer border-0 py-5">
            <span class="text-muted text-sm">Showing 10 items out of 250 results found</span>
        </div>


        <div class="container">
            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#form">
              Add Product
            </button>  
          </div>
          
          <div class="modal fade" id="create_category" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
              <div class="modal-content">
                <div class="modal-header border-bottom-0">
                  <h5 class="modal-title" id="exampleModalLabel">Create Account</h5>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <form action="/categories" method="post">
                  <div class="modal-body">
                    <div class="form-group">
                      <label for="name">Name</label>
                      <input type="text" class="form-control" id="name" aria-describedby="emailHelp" placeholder="Enter name">
                      <small id="emailHelp" class="form-text text-muted">Your information is safe with us.</small>
                    </div>
                    <div class="form-group">
                      <label for="description">Description</label>
                      <input type="text" class="form-control" id="description" placeholder="Description">
                    </div>
                    <div class="form-group">
                      <label for="price">Price</label>
                      <input type="text" class="form-control" id="price" placeholder="Price">
                    </div>
                  </div>
                  <div class="modal-footer border-top-0 d-flex justify-content-center">
                    <button type="submit" class="btn btn-success">Create Product</button>
                  </div>
                </form>
              </div>
            </div>
          </div>

        <div id="createuser" class="modal">
            <div>
                <form action="/categories" method="post">
                    <label for="name">Name</label>
                    <input type="text" name="product_name" id="name">
                    <label for="name">Description</label>
                    <input type="text" name="product_description" id="name">
                    <label for="name">Price</label>
                    <input type="text" name="product_price" id="name">
    
    
            
                    <button type="submit">Create Product</button>
                </form>
            </div>
        </div>
    
        
    
        <div class="model-container" id="updateuser"  class="modal">
            <div class="model">
                <div onclick="document.querySelector('.model-container').style.visibility = 'hidden'">Close</div>
                <form id="updateForm">
    
                    <label for="name">Name</label>
                    <input type="text" name="name" id="updateName">
    
                    <button type="submit" id="updateData">Update User</button>
                   
                </form>
            </div>
        </div> -->


        <!-- <div class="model-container" id="updateuser"  class="modal">
            <div class="model">
                <div onclick="document.querySelector('.model-container').style.visibility = 'hidden'">Close</div>
                <form id="updateForm">
    
                    <label for="name">Name</label>
                    <input type="text" name="name" id="updateName">
    
                    <label for="email">email</label>
                    <input type="email" name="email" id="updateEmail" >
    
                    <label for="role">role</label>
                    <input type="text" name="roleId" id="updateRole" >
    
                    <button type="submit" id="updateData">Update User</button>
                   
                </form>
            </div>
        </div> -->


        
        <div class="row" id="updateuser" style="visibility: hidden;">
            <div class="col-md-12">
              <form action="" method="">
                
                <fieldset>
                          
                  <label for="name">User Name</label>
                  <input type="text" id="updateName" name="name">
                
                  <label for="email">Email</label>
                  <input type="email" id="updateEmail" name="email">
        
         
                  <label for="roleId">Role</label>
                  <input type="text" id="updateRole" name="roleId">
               
                <button type="submit" id="updateUserBtn" onclick="return refreshPage()">Update User</button>
                
               </form>
                </div>
              </div>

    </div>
    </div>


    <div class="center">
      <div class="pagination">
          <%for(var i = 1; i <=2; i++) { %>
          
          <span class="page" id="<%=i%>" onclick="pagination('<%=i%>')"><%=i%></span>
         <% } %>
           
      </div>
  </div>




    </main>

    <script>

async function pagination(page){
       console.log(page);
       var set = '';
       
       await axios.post(`/auth/page?page=${page}`).then(function (response) { 
          console.log("",response.data);
          for(var i=0;i<response.data.length;i++){
            set+=`<tr><td>${ response.data[i].name }</td><td>${ response.data[i].email}</td><td>${ response.data[i].role.name }</td><td class="text-end"><button type="button" id="editbutton" class="login-trigger btn btn-sm btn-neutral" data-target="#login" data-toggle="modal" onclick="return editUser('${ response.data[i].id}')">Edit</button><button type="button" class="btn btn-sm btn-square btn-neutral text-danger-hover" onclick=" userdelete('${ response.data[i].id }')"><i class="bi bi-trash"></i></button></td></tr>`

          }
             console.log(set);
           document.getElementById("change").innerHTML=set;

       });
     } 

async function searching(){

var val= document.getElementById("search").value
console.log(val);
var set = '';
await axios.get(`/auth/search?data=${val}`).then(function (response) { 
 console.log("datt ===",response.data);


 for(var i=0;i<response.data.length;i++){
  set+=`<tr><td>${ response.data[i].name }</td><td>${ response.data[i].email}</td><td>${ response.data[i].role.name }</td><td class="text-end"><button type="button" id="editbutton" class="login-trigger btn btn-sm btn-neutral" data-target="#login" data-toggle="modal" onclick="return editUser('${ response.data[i].id}')">Edit</button><button type="button" class="btn btn-sm btn-square btn-neutral text-danger-hover" onclick=" userdelete('${ response.data[i].id }')"><i class="bi bi-trash"></i></button></td></tr>`
}
  console.log(set);
  document.getElementById("change").innerHTML=set;
});

}


async function sorting(sort){
      console.log(sort);
    var set = '';
    number=document.getElementById("number").value;
    console.log(number);
    if(number%2==0){
      var plus=++number;
      document.getElementById("number").value=plus;
      console.log("plus",plus);
      console.log("if",number%2==0);
    var sort_type = 'desc';
    await axios.post(`/auth/sort-user?data=${sort}&type=${sort_type}`).then(function (response){
      console.log(response);

 for(var i=0;i<response.data.length;i++){
  
  set+=`<tr><td>${ response.data[i].name }</td><td>${ response.data[i].email}</td><td>${ response.data[i].role.name }</td><td class="text-end"><button type="button" id="editbutton" class="login-trigger btn btn-sm btn-neutral" data-target="#login" data-toggle="modal" onclick="return editUser('${ response.data[i].id}')">Edit</button><button type="button" class="btn btn-sm btn-square btn-neutral text-danger-hover" onclick=" userdelete('${ response.data[i].id }')"><i class="bi bi-trash"></i></button></td></tr>`


}
  console.log(set);
  document.getElementById("change").innerHTML=set;
    });

    }else{
      var plus=++number;
      console.log("plus",plus);
      document.getElementById("number").value=plus;

      
      console.log("else",number%2==0);
    var sort_type = 'asc';
    await axios.post(`/auth/sort-user?data=${sort}&type=${sort_type}`).then(function (response){
      console.log(response);

 for(var i=0;i<response.data.length;i++){
  
  set+=`<tr><td>${ response.data[i].name }</td><td>${ response.data[i].email}</td><td>${ response.data[i].role.name }</td><td class="text-end"><button type="button" id="editbutton" class="login-trigger btn btn-sm btn-neutral" data-target="#login" data-toggle="modal" onclick="return editUser('${ response.data[i].id}')">Edit</button><button type="button" class="btn btn-sm btn-square btn-neutral text-danger-hover" onclick=" userdelete('${ response.data[i].id }')"><i class="bi bi-trash"></i></button></td></tr>`


}
  console.log(set);
  document.getElementById("change").innerHTML=set;
    });

    }
   
  }





    function sortData(){
      
    }


    async function searchUser(){
      var searchValue = document.getElementById('search').value;
      console.log(searchValue);

      await axios.get(`/users/search?search=${searchValue}`);
    }
   
    function addUserBtn(){
        window.location.assign('/users/add_user_page')
        // window.location.reload()

    }

    const updateUser = async (id)=>{
        

        var modal1 = document.getElementById("updateuser");
        modal1.style.visibility = "visible";

        const res = await axios.get(`/users/user/${id}`);
        const user = res.data;
        console.log(res);
        console.log(user);
        document.getElementById('updateName').value = user.name;
        document.getElementById('updateEmail').value = user.email;
        document.getElementById('updateRole').value = user.roleId;

        const updateForm = document.querySelector('#updateuser');
        updateForm.addEventListener('submit', async (e)=>{
            e.preventDefault()
            const res1 = await axios.put(`/users/${id}`, {
               
                name: document.getElementById('updateName').value,
                email: document.getElementById('updateEmail').value,
                roleId: document.getElementById('updateRole').value,
            })
            // modal1.style.visibility = "hidden"; 
            document.querySelector('.model-container').style.visibility = "hidden";

            // location.assign('/users/user')
        // window.location.reload();

            console.log(res1);
        })

}
function refreshPage() {
        window.location.assign('http://localhost:3000/users/user')
        window.location.assign('http://localhost:3000/users/user')

        // window.location.reload();
        // window.location.reload();

    }
async function confirmation(id) {
        if (confirm("Are you sure you want to delete this data..?")) {


            axios.delete(`/users/${id}`).then(function (response) { return "data deleted"})

            window.location.reload()


        } else {
            alert("not deleted");
        }
    }
       
    
    
    </script>
</body> 
</html>