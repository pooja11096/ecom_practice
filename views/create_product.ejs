<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Panel</title>
    <link rel="stylesheet" href="/adminStyle.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
        integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://unpkg.com/@webpixels/css@1.1.5/dist/index.css">

    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.4.0/font/bootstrap-icons.min.css">

    <link rel="stylesheet" href="/css/crud.css">

    <!-- <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        .header {
            display: flex;
            justify-content: space-between;
        }


        *,
        *:before,
        *:after {
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
        }

        body {
            font-family: 'Nunito', sans-serif;
            color: #384047;
        }

        form {
            max-width: 300px;
            margin: 10px auto;
            padding: 10px 20px;
            background: #f4f7f8;
            border-radius: 8px;
        }

        h1 {
            margin: 0 0 30px 0;
            text-align: center;
        }

        input[type="text"],
        input[type="password"],
        input[type="email"],
        input[type="number"] select {
            background: rgba(255, 255, 255, 0.1);
            border: none;
            font-size: 16px;
            height: auto;
            margin: 0;
            outline: 0;
            padding: 15px;
            width: 100%;
            background-color: #e8eeef;
            color: #8a97a0;
            box-shadow: 0 1px 0 rgba(0, 0, 0, 0.03) inset;
            margin-bottom: 30px;
        }

        select {
            padding: 6px;
            height: 32px;
            border-radius: 2px;
        }

        #updateUserBtn {
            padding: 19px 39px 18px 39px;
            color: #FFF;
            background-color: #4bc970;
            font-size: 18px;
            text-align: center;
            font-style: normal;
            border-radius: 5px;
            width: 100%;
            border: 1px solid #3ac162;
            border-width: 1px 1px 3px;
            box-shadow: 0 -1px 0 rgba(255, 255, 255, 0.1) inset;
            margin-bottom: 10px;
        }

        fieldset {
            margin-bottom: 30px;
            border: none;
        }

        legend {
            font-size: 1.4em;
            margin-bottom: 10px;
        }

        label {
            display: block;
            margin-bottom: 8px;
        }

        label.light {
            font-weight: 300;
            display: inline;
        }

        .number {
            background-color: #5fcf80;
            color: #fff;
            height: 30px;
            width: 30px;
            display: inline-block;
            font-size: 0.8em;
            margin-right: 4px;
            line-height: 30px;
            text-align: center;
            text-shadow: 0 1px 0 rgba(255, 255, 255, 0.2);
            border-radius: 100%;
        }

        #deleteBtn {
            cursor: pointer;
        }

        @media screen and (min-width: 480px) {

            form {
                max-width: 480px;
            }

        }


        .model-container {
            display: flex;
            align-items: center;
            justify-content: center;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            background: transparent;
            /* background-color: #5fcf80; */
            visibility: hidden;


        }

        .model {
            width: 100%;
            /*background-color: #fff;
            padding: 3rem;
            border-radius: 5px; */
            padding: 3rem;
            border-radius: 5px;
            /* align-items: center; */
            display: flex;
            flex-direction: column;
            height: 100vh;
            justify-content: center;
            align-items: center;

        }

        .model input {
            width: 100%;
            margin: 10px 0;
            padding: 10px;
        }

        .model input[type="submit"] {
            background-color: #5fcf80;
            color: #fff;
            border: none;
            cursor: pointer;
        }

        .model input[type="submit"]:hover {
            background-color: #fff;
            color: #5fcf80;
        }

        .model-container-form {
            display: flex;
            align-items: center;
            justify-content: center;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            background-color: rgba(0, 0, 0, 0.5);
            visibility: hidden;


        }

        .model-container-catagory {
            display: flex;
            align-items: center;
            justify-content: center;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            /* background-color: rgba(0,0,0,0.5); */
            visibility: hidden;


        }

        .model-container-products {
            display: flex;
            align-items: center;
            justify-content: center;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            /* background-color: rgba(0,0,0,0.5); */
            visibility: hidden;


        }

        .errow {
            font-size: 2rem;
            cursor: pointer;
        }

        .search {
            border-radius: 15px;
            width: 300px;
        }

        .center {
            text-align: center;
            font-family: monospace;
        }

        .pagination {
            display: inline-block;
        }

        .pagination span {
            color: #000000;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .5s;
            border: 1px solid #DDD;
            margin: 0 4px;
            font-size: 20px;
        }

        .pagination span.active {
            background-color: #0096FF;
            color: #FFFFFF;
            border: 1px solid #0096FF;
        }

        .pagination span:hover:not(.active) {
            background-color: #DDD;
        }
    </style> -->



</head>

<body>

    <main class="py-6 bg-surface-secondary">
        <div class="container-fluid">

            <div class="card shadow border-0 mb-7">
                <div class="card-header">
                    <div><a href="/orders/admin_dashboard">Home</a></div>

                    <div class="search">
                        <label>
                            <input type="text" placeholder="Search here" class="search" id="search"
                                onkeyup="searching()" />

                            <ion-icon name="search-outline"></ion-icon>
                        </label>
                    </div>

                    <div class="user"></div>
                    <div class="header">
                        <h5 class="mb-0">Products</h5>


                        <button id="addProducts" onclick="addProductPage()">Add Products</button>
                    </div>

                </div>
                <div class="table-responsive">


                    <table class="table table-hover table-nowrap">
                        <thead class="thead-light">
                            <input type="text" class="number" id="number" value="1" hidden>


                            <tr>
                                <th scope="col" id="product_name" onclick="sorting(this.id)">Product Name</th>
                                <th scope="col" id="product_description" onclick="sorting(this.id)">Description</th>
                                <th scope="col" id="product_price" onclick="sorting(this.id)">Price</th>
                                <th scope="col">Categories</th>
                                <th scope="col">Delete</th>
                                <th scope="col">Edit</th>

                            </tr>

                        </thead>
                        <tbody id="tbody">

                        </tbody>
                    </table>
                </div>

                <div class="card-footer border-0 py-5">
                    <span class="text-muted text-sm">Showing 10 items out of 250 results found</span>
                </div>


                <div class="model-container-products" id="updateuser" style="visibility: hidden;">
                    <div class="col-md-12">
                        <div class="model">
                            <div
                                onclick="document.querySelector('.model-container-products').style.visibility = 'hidden'">
                                <i class="fa fa-window-close" aria-hidden="true"></i>
                            </div>

                            <form id="addProductForm" enctype="multipart/form-data" action="/data" method="get">

                                <fieldset>

                                    <label for="name">Product Name</label>
                                    <input type="text" id="product_name" name="product_name">

                                    <label for="product_description">Product description</label>
                                    <input type="text" id="product_description" name="product_description">

                                    <label for="product_price">Product price</label>
                                    <input type="text" id="product_price" name="product_price">

                                    <label for="image_url">Select Image</label>
                                    <input type="file" name="image_url" id="image_url">

                                    <label for="categories">Select category</label>
                                    <select id="categoriesDropDown" name="categoriesDropDown" multiple>
                                    </select>


                                    <input type="submit" name="submit" value="Add">

                                    <!-- <button type="submit" id="updateUserBtn" onclick="return refreshPage()">Update User</button> -->

                            </form>
                        </div>
                    </div>
                </div>



                <div class="model-container" id="updateuser" style="visibility: hidden;">
                    <div class="col-md-12">
                        <div class="model">
                            <div onclick="document.querySelector('.model-container').style.visibility = 'hidden'">
                                <i class="fa fa-window-close" aria-hidden="true"></i>
                            </div>

                            <form id="updateForm" enctype="multipart/form-data">

                                <fieldset>

                                    <label for="name">Product Name</label>
                                    <input type="text" id="uproduct_name" name="product_name">

                                    <label for="product_description">Product description</label>
                                    <input type="text" id="uproduct_description" name="product_description">

                                    <label for="product_price">Product price</label>
                                    <input type="text" id="uproduct_price" name="product_price">

                                    <!-- <label for="image_url">Select Image</label>
                                    <input type="file" name="image_url" id="file"> -->

                                    <label for="categories">Select Category</label>
                                    <select id="catDropDown" name="catDropDown" multiple>
                                    </select>

                                    <input type="submit" name="submit" value="Add">


                            </form>
                        </div>
                    </div>
                </div>

            </div>

            <div class="center">
                <div class="pagination">
                    <%for(var i=1; i <=lastPage; i++) { %>

                        <span class="page" id="<%=i%>" onclick="pagination('<%=i%>')">
                            <%=i%>
                        </span>
                        <% } %>

                </div>
            </div>


        </div>
        </div>

    </main>


</body>
<script>

    window.onload = () => {
        getProducts()
        getCategories()
    }
    async function getProducts() {
        console.log("helllo");
        // alert("Heyy");
        const data = await axios.get('/products/');
        console.log("fdhgjhjgh data", data)
        const tbody = document.querySelector('#tbody');
        // console.log("dataaaaaa", data.products[0])
        console.log(data.data.length);

        let html = '';

        for (var i = 0; i < data.data.length; i++) {

            var cats = '';
            for (var j = 0; j < data.data[i].categories.length; j++) {
                cats += data.data[i].categories[j].category_name
            }

            html += `
                <tr>
                    <td>
                    <img src="/${data.data[i].image_url}" alt="" class="avatar avatar-sm rounded-circle me-2">
                     ${data.data[i].product_name}</td>
                    <td>${data.data[i].product_description}</td>
                    <td>${data.data[i].product_price}</td>
                    <td id="cat_name">
                    <ul>
                            <li>
                                ${cats}
                                
                            </li>
                            
                            
                    </ul>
                    </td>
                    <td><button onclick="deleteProduct('${data.data[i].id}')">delete</button></td>
                    <td><button onclick="editProduct('${data.data[i].id}')">edit</button></td>
                </tr>
                `

            // catnames +=``
            tbody.innerHTML = html;

        }

    }
    async function getCategories() {

        const categoriesData = await axios.get('/categories/cats');
        console.log("categoriesData", categoriesData)

        for (let catagory of categoriesData.data) {

            let option = document.createElement("option");
            option.setAttribute('value', catagory.id);

            let optionText = document.createTextNode(catagory.category_name);
            option.appendChild(optionText);

            let option1 = document.createElement("option");
            option1.setAttribute('value', catagory.id);

            let optionText1 = document.createTextNode(catagory.category_name);
            option1.appendChild(optionText1);

            catDropDown.appendChild(option);
            categoriesDropDown.appendChild(option1);
        }
    }

    console.log(catDropDown);
    console.log(categoriesDropDown);
    const add = document.querySelector('#addProducts');
    add.addEventListener('click', () => {
        document.querySelector('.model-container-products').style.visibility = 'visible';
    })

    const form = document.querySelector('#addProductForm');
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        let name = document.getElementById("product_name").value;
        let description = document.getElementById("product_description").value;
        let price = Number(document.getElementById("product_price").value);
        console.log("name", name);
        console.log("price", typeof price);
        console.log("price", +price);

        let catagory = document.getElementById("categoriesDropDown").value;
        console.log("catagory007", catagory)
        let categoryIds = catagory;
        console.log("categoryIds", categoryIds, typeof (categoryIds))
        let formData = new FormData(form);
        console.log("formaData", formData);

        let res = await axios.post('/products/upload/single', formData)
        console.log("res", res);
        document.querySelector('.model-container-products').style.visibility = 'hidden';

        document.getElementById("product_name").value = '';
        document.getElementById("product_description").value = '';
        document.getElementById("product_price").value = '';
        // document.getElementById("file").value = '';
        getProducts();
    })

    // const editProduct = async (id) => {
    async function editProduct(id) {
        console.log("edit...");
        // e.preventDefault();
        // const res = await axios.get(`/products/product/edit/${id}`);
        const res = await axios.get(`/products/product/edit/${id}`);
        console.log("ress", res);

        const user = res.data;
        console.log("product.....", user);
        console.log("user111111", user.categories[0].id);


        // document.getElementById('uid').value = user.id;
        document.getElementById('uproduct_name').value = user.product_name;
        document.getElementById('uproduct_description').value = user.product_description;
        document.getElementById('uproduct_price').value = user.product_price;
        console.log("catid", document.getElementById('catDropDown').value);
        document.getElementById('catDropDown').value = user.categories[0].id;


        document.querySelector('.model-container').style.visibility = 'visible';


        const form = document.querySelector('#updateForm');
        form.addEventListener('submit', async (e) => {
            e.preventDefault();

            const product_n = document.getElementById("uproduct_name").value;
            console.log("product_name", product_n);
            const product_description = document.getElementById("uproduct_description").value;
            const product_price = document.getElementById("uproduct_price").value;

            console.log("price", +product_price);
            const catagory = document.getElementById("catDropDown").value;
            console.log("adscasc", catagory, typeof (catagory))
            // let categoryIds = catagory;
            // console.log("catIds",categoryIds,typeof(categoryIds))
            const formData = new FormData(form);
            console.log("fff", formData);
            const formDataObj = Object.fromEntries(formData.entries());
            console.log("formDataObj", formDataObj);
            console.log("formDataObj", formDataObj.product_name);

            // console.log("formaData", formData);


            const res = await axios.put(`/products/pwc/${id}`,
                {
                    product_name: document.getElementById('uproduct_name').value,
                    product_description: document.getElementById('uproduct_description').value,
                    product_price: parseInt(document.getElementById('uproduct_price').value),
                    catDropDown: document.getElementById('catDropDown').value
                });
            console.log("ressaso", res)
            document.querySelector('.model-container').style.visibility = 'hidden';
            getProducts();
        })
    }


    async function deleteProduct(id) {
        let res = await axios.delete(`/products/${id}`);
        console.log(res);
        getProducts();
    }

    async function searching() {

        var val = document.getElementById("search").value
        console.log("search", val);
        var set = '';
        await axios.post(`/products/search-product?data=${val}`).then(function (response) {
            console.log("datt ===", response.data);


            for (var i = 0; i < response.data.length; i++) {

                set += `
                <tr>
                    <td>
                    <img src="/${response.data[i].image_url}" alt="" class="avatar avatar-sm rounded-circle me-2">
                    
                    ${response.data[i].product_name}</td>
                    <td>${response.data[i].product_description}</td>
                    <td>${response.data[i].product_price}</td>
                    <td>
                    <ul>
                            <li>
                                ${response.data[i].categories[0].category_name}
                                
                            </li>
                            
                            
                    </ul>
                    </td>
                    <td><button onclick="deleteProduct(' ${response.data[i].id}')">delete</button></td>
                    <td><button onclick="editProduct(' ${response.data[i].id}')">edit</button></td>
                </tr>
                `
            }
            console.log(set);
            document.getElementById("tbody").innerHTML = set;
        });

    }

    async function pagination(page) {
        console.log(page);
        var set = '';

        await axios.post(`/products/page?page=${page}`).then(function (response) {
            console.log("pag data..", response.data);
            for (var i = 0; i < response.data.length; i++) {

                set += `
                <tr>
                    <td>
                        <img src="/${response.data[i].image_url}" alt="" class="avatar avatar-sm rounded-circle me-2">
                    
                    ${response.data[i].product_name}</td>
                    <td>${response.data[i].product_description}</td>
                    <td>${response.data[i].product_price}</td>
                    <td>
                    <ul>
                            <li>
                                ${response.data[i].categories[0].category_name}
                                
                            </li>
                            
                            
                    </ul>
                    </td>
                    <td><button onclick="deleteProduct('${response.data[i].id}')">delete</button></td>
                    <td><button onclick="editProduct('${response.data[i].id}')">edit</button></td>
                </tr>
                `

            }
            console.log(set);
            document.getElementById("tbody").innerHTML = set;

        });
    }




    async function sorting(sort) {
        console.log(sort);
        var set = '';
        number = document.getElementById("number").value;
        console.log(number);
        if (number % 2 == 0) {
            var plus = ++number;
            document.getElementById("number").value = plus;
            console.log("plus", plus);
            console.log("if", number % 2 == 0);
            var sort_type = 'desc';
            await axios.post(`/products/sort-product?data=${sort}&type=${sort_type}`).then(function (response) {
                console.log(response);

                for (var i = 0; i < response.data.length; i++) {

                    // set += `<tr><td>${response.data[i].name}</td><td>${response.data[i].email}</td><td>${response.data[i].role.name}</td><td class="text-end"><button type="button" id="editbutton" class="login-trigger btn btn-sm btn-neutral" data-target="#login" data-toggle="modal" onclick="return editUser('${response.data[i].id}')">Edit</button><button type="button" class="btn btn-sm btn-square btn-neutral text-danger-hover" onclick=" userdelete('${response.data[i].id}')"><i class="bi bi-trash"></i></button></td></tr>`
                    set += `
                <tr>
                    <td>
                        <img src="/${response.data[i].image_url}" alt="" class="avatar avatar-sm rounded-circle me-2">
                    
                    ${response.data[i].product_name}</td>
                    <td>${response.data[i].product_description}</td>
                    <td>${response.data[i].product_price}</td>
                    <td>
                    <ul>
                            <li>
                                ${response.data[i].categories[0].category_name}
                                
                            </li>
                            
                            
                    </ul>
                    </td>
                    <td><button onclick="deleteProduct(' ${response.data[i].id}')">delete</button></td>
                    <td><button onclick="editProduct(' ${response.data[i].id}')">edit</button></td>
                </tr>
                `


                }
                console.log(set);
                document.getElementById("tbody").innerHTML = set;
            });

        } else {
            var plus = ++number;
            console.log("plus", plus);
            document.getElementById("number").value = plus;


            console.log("else", number % 2 == 0);
            var sort_type = 'asc';
            await axios.post(`/products/sort-product?data=${sort}&type=${sort_type}`).then(function (response) {
                console.log(response);

                for (var i = 0; i < response.data.length; i++) {

                    // set += `<tr><td>${response.data[i].name}</td><td>${response.data[i].email}</td><td>${response.data[i].role.name}</td><td class="text-end"><button type="button" id="editbutton" class="login-trigger btn btn-sm btn-neutral" data-target="#login" data-toggle="modal" onclick="return editUser('${response.data[i].id}')">Edit</button><button type="button" class="btn btn-sm btn-square btn-neutral text-danger-hover" onclick=" userdelete('${response.data[i].id}')"><i class="bi bi-trash"></i></button></td></tr>`
                    set += `
                <tr>
                    <td>
                    <img src="/${response.data[i].image_url}" alt="" class="avatar avatar-sm rounded-circle me-2">

                    ${response.data[i].product_name}</td>
                    <td>${response.data[i].product_description}</td>
                    <td>${response.data[i].product_price}</td>
                    <td>
                    <ul>
                            <li>
                                ${response.data[i].categories[0].category_name}
                                
                            </li>
                            
                            
                    </ul>
                    </td>
                    <td><button onclick="deleteProduct(' ${response.data[i].id}')">delete</button></td>
                    <td><button onclick="editProduct(' ${response.data[i].id}')">edit</button></td>
                </tr>
                `


                }
                console.log(set);
                document.getElementById("tbody").innerHTML = set;
            });

        }

    }


</script>

</html>